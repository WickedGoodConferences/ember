<main class="l-main" role="main">
  <section class="l-section l-narrow">
    <ul>
      <span class="anchor" id="tom-dale"></span>
      <li class="speaker">
        <figure>
          <img class="speaker__image" src="2016/speakers/tom-dale.jpg" alt="Tom Dale">
          <figcaption class="speaker__info">
            <h3 class="t-subheading">Tom Dale</h3>
            <span class="speaker__position">
              Co-creator of
              <a class="t-link t-blue" href="http://emberjs.com/" target="_blank">Ember.js</a>
            </span>
            <span class="speaker__keynote t-text">Keynote</span>
          </figcaption>
        </figure>
        <div class="speaker__socials">
          <a class="speaker__social t-link" href="https://twitter.com/tomdale" title="Visit Tom Dale's Twitter" target="_blank">
            <svg><use xlink:href="#twitter"></svg>
          </a>
        </div>
      </li>

      <span class="anchor" id="chris-mccord"></span>
      <li class="speaker">
        <figure>
          <img class="speaker__image" src="2016/speakers/chris-mccord.jpg" alt="Chris McCord">
          <figcaption class="speaker__info">
            <h3 class="t-subheading">Chris McCord</h3>
            <span class="speaker__position">
              <a class="t-link t-blue" href="https://dockyard.com/" target="_blank">DockYard</a>
            </span>
            <span class="speaker__keynote t-text">Co-Keynote</span>
          </figcaption>
        </figure>
        <div class="speaker__socials">
          <a class="speaker__social t-link" href="https://twitter.com/chris_mccord" title="Visit Chris McCord's Twitter" target="_blank">
            <svg><use xlink:href="#twitter"></svg>
          </a>
        </div>
      </li>

      <span class="anchor" id="dan-mcclain"></span>
      <li class="speaker">
        <figure>
          <img class="speaker__image" src="2016/speakers/dan-mcclain.jpg" alt="Dan McClain">
          <figcaption class="speaker__info">
            <h3 class="t-subheading">Dan McClain</h3>
            <span class="speaker__position">
              <a class="t-link t-blue" href="https://www.twitch.tv/" target="_blank">Twitch</a>
            </span>
            <span class="speaker__keynote t-text">Co-Keynote</span>
          </figcaption>
        </figure>
        <div class="speaker__socials">
          <a class="speaker__social t-link" href="https://twitter.com/_danmcclain" title="Visit Dan McClain's Twitter" target="_blank">
            <svg><use xlink:href="#twitter"></svg>
          </a>
        </div>
      </li>

      <span class="anchor" id="liz-baillie"></span>
      <li class="speaker">
        <figure>
          <img class="speaker__image" src="2016/speakers/liz-baillie.jpg" alt="Liz Baillie">
          <figcaption class="speaker__info">
            <h3 class="t-subheading">Liz Baillie</h3>
            <span class="speaker__position">
              <a class="t-link t-blue" href="http://www.tilde.io" target="_blank">Tilde</a>
            </span>
          </figcaption>
        </figure>
        <div class="speaker__socials">
          <a class="speaker__social t-link" href="https://twitter.com/infinite_math" title="Visit Liz Baillie's Twitter" target="_blank">
            <svg><use xlink:href="#twitter"></svg>
          </a>
        </div>
        <p class="speaker__bio">
          Former award-losing cartoonist, current staff engineer at Tilde, future sassy old woman with too many dogs.
        </p>
        <div class="speaker__talk">
          <h3 class="speaker__talk__title">Journey to the Center of Ember Test Helpers</h3>
          <p class="t-text">Those Ember test helpers sure are great, aren’t they? Ever wonder what’s going on under the hood to make these helpers so… helpful? Come, join me on an epic journey to uncover the secrets (and not-so-secrets) of our friendly neighborhood Ember test helpers!</p>
        </div>
      </li>

      <span class="anchor" id="erik-bryn"></span>
      <li class="speaker">
        <figure>
          <img class="speaker__image" src="2016/speakers/erik-bryn.jpg" alt="Erik Bryn">
          <figcaption class="speaker__info">
            <h3 class="t-subheading">Erik Bryn</h3>
            <span class="speaker__position">
              <a class="t-link t-blue" href="https://www.prototypal.io/" target="_blank">Prototypal</a>
            </span>
          </figcaption>
        </figure>
        <div class="speaker__socials">
          <a class="speaker__social t-link" href="https://twitter.com/ebryn" title="Visit Erik Bryn's Twitter" target="_blank">
            <svg><use xlink:href="#twitter"></svg>
          </a>
        </div>
        <p class="speaker__bio">
          Erik has been working on Ember.js since its inception and is a member of the Ember.js core team. He’s spent the last several years helping teams learn and build Ember applications at companies like LinkedIn, Netflix, Square, PagerDuty, and Zendesk.
        </p>
        <div class="speaker__talk">
          <h3 class="speaker__talk__title">Taming CSS in Ember.js Apps</h3>
          <p class="t-text">Web development is like battling a three headed Chimera. The heads are HTML the lion, the body of the beast; JS the dragon, giving the lion the ability to fly and breathe fire; and CSS: the goat head, annoyingly nagging us albeit somewhat entertaining. Most web developers will probably agree: we’ve tamed two of the three beasts: HTML &amp; JS. CSS remains. Let’s talk about how we can tame our CSS.</p>
        </div>
      </li>

      <span class="anchor" id="iheanyi-ekechukwu"></span>
      <li class="speaker">
        <figure>
          <img class="speaker__image" src="2016/speakers/iheanyi-ekechukwu.jpg" alt="Iheanyi Ekechukwu">
          <figcaption class="speaker__info">
            <h3 class="t-subheading">Iheanyi Ekechukwu</h3>
            <span class="speaker__position">
              <a class="t-link t-blue" href="https://www.digitalocean.com/" target="_blank">DigitalOcean</a>
            </span>
          </figcaption>
        </figure>
        <div class="speaker__socials">
          <a class="speaker__social t-link" href="https://twitter.com/kwuchu" title="Visit Iheanyi Ekechukwu's Twitter" target="_blank">
            <svg><use xlink:href="#twitter"></svg>
          </a>
        </div>
        <p class="speaker__bio">
          Iheanyi is a Software Engineer at DigitalOcean and a graduate of the University of Notre Dame, with degrees in Computer Science and Graphic Design. He enjoys building delightful applications for the web in addition to great user experiences.
        </p>
        <div class="speaker__talk">
          <h3 class="speaker__talk__title">Ember.js and DevOps: Lessons Learned About Deployment</h3>
          <p class="t-text">Since Ember-CLI was introduced, we’ve seen Ember apps move away from being deployed with back-end apps but rather being deployed stand-alone or through other strategies with Ember-CLI-Deploy. With the release of Fastboot, the deployment game has somewhat changed again. In this talk, he’ll talk about his experience creating an Ember-CLI-Deploy plugin for deploying Fastboot apps to DigitalOcean droplets and the takeaways from getting into DevOps with JavaScript and Ember.js.</p>
        </div>
      </li>

      <span class="anchor" id="katie-gengler"></span>
      <li class="speaker">
        <figure>
          <img class="speaker__image" src="2016/speakers/katie-gengler.jpg" alt="Katie Gengler">
          <figcaption class="speaker__info">
            <h3 class="t-subheading">Katie Gengler</h3>
            <span class="speaker__position">
              <a class="t-link t-blue" href="http://codeallday.com/" target="_blank">Code All Day</a>
            </span>
          </figcaption>
        </figure>
        <div class="speaker__socials">
          <a class="speaker__social t-link" href="https://twitter.com/katiegengler" title="Visit Katie Gengler's Twitter" target="_blank">
            <svg><use xlink:href="#twitter"></svg>
          </a>
        </div>
        <p class="speaker__bio">
          Katie is an experienced web developer and has been using Ember since 2012. In 2015, she started Code All Day Consulting with Michelle Santarsiero. She created and maintains
          <a class="t-link" href="https://emberobserver.com/">EmberObserver.com</a>.
          She is also a member of the
          <a class="t-link" href="http://ember-cli.com/">ember-cli</a>
          core team.
        </p>
        <div class="speaker__talk">
          <h3 class="speaker__talk__title">The Devil is in the Details: Building an Ember Addon the Right Way</h3>
          <p class="t-text">Creating a new Ember addon is as simple as `ember addon my-cool-thing`. But, that’s just the very beginning of the work needed to create a high-quality addon that can be used by the community. We’ll cover the best practices, common gotchas and easily-overlooked decisions that come up when making an addon. To understand creating different types of addons, we’ll look in-depth at three codebases: one addon that extends Ember-CLI, one addon that extends Ember, and one build-tool addon.</p>
        </div>
      </li>

      <span class="anchor" id="gaurav-munjal"></span>
      <li class="speaker">
        <figure>
          <img class="speaker__image" src="2016/speakers/gaurav-munjal.jpg" alt="Gaurav Munjal">
          <figcaption class="speaker__info">
            <h3 class="t-subheading">Gaurav Munjal</h3>
            <span class="speaker__position">
              <a class="t-link t-blue" href="https://www.linkedin.com/" target="_blank">LinkedIn</a>
            </span>
          </figcaption>
        </figure>
        <div class="speaker__socials">
          <a class="speaker__social t-link" href="https://twitter.com/gaurav9576" title="Visit Gaurav Munjal's Twitter" target="_blank">
            <svg><use xlink:href="#twitter"></svg>
          </a>
        </div>
        <p class="speaker__bio">
          Gaurav Munjal is a Software Engineer at LinkedIn and a maintainer of the
          <a class="t-link" href="https://ember-twiddle.com/">Ember Twiddle</a>
          website.
        </p>
        <div class="speaker__talk">
          <h3 class="speaker__talk__title">Test Driven Development in Ember Twiddle</h3>
          <p class="t-text">Now that Ember Twiddle supports tests, watch how you can easily do test first development with Ember Twiddle. This is extremely useful for practice your next coding interview. Also shown will be a step by step tutorial of Ember itself using the new revision feature.</p>
        </div>
      </li>

      <span class="anchor" id="mike-north"></span>
      <li class="speaker">
        <figure>
          <img class="speaker__image" src="2016/speakers/mike-north.jpg" alt="Mike North">
          <figcaption class="speaker__info">
            <h3 class="t-subheading">Mike North</h3>
            <span class="speaker__position">
              <a class="t-link t-blue" href="http://www.levantofinancial.com/" target="_blank">Levanto</a>
            </span>
          </figcaption>
        </figure>
        <div class="speaker__socials">
          <a class="speaker__social t-link" href="https://twitter.com/michaellnorth" title="Visit Mike North's Twitter" target="_blank">
            <svg><use xlink:href="#twitter"></svg>
          </a>
        </div>
        <p class="speaker__bio">
          Coding CTO of Levanto Financial, former UI Architect of
          <a class="t-link" href="https://www.yahoo.com/">Yahoo Ads &amp; Data</a>,
          contributor to ember, ember-data, ember-cli, and maintainer of way too many ember addons.
        </p>
        <div class="speaker__talk">
          <h3 class="speaker__talk__title">Delightful UX for Distributed Systems</h3>
          <p class="t-text">In a distributed system, the complexity and challenges that accompany asynchrony, consistency, connectivity and concurrency make it particularly difficult to build a user experience that “wows” your users. Desktop and mobile developers have been wrestling problems like these for years, and finally web apps are catching up!</p>
          <p class="t-text">I’ll go over some UI and software architecture patterns involving long-running proceses, concurrent editing, and operations that require user intervention, to show that with a small adjustment in how one thinks about these things, building a UI for a distributed system is not a herculean task.</p>
        </div>
      </li>

      <span class="anchor" id="philip-poots"></span>
      <li class="speaker">
        <figure>
          <img class="speaker__image" src="2016/speakers/philip-poots.jpg" alt="Philip Poots">
          <figcaption class="speaker__info">
            <h3 class="t-subheading">Philip Poots</h3>
            <span class="speaker__position">
              <a class="t-link t-blue" href="http://www.elmbark.com/" target="_blank">Elm Bark</a>
            </span>
          </figcaption>
        </figure>
        <div class="speaker__socials">
          <a class="speaker__social t-link" href="https://twitter.com/pootsbook" title="Visit Philip Poots' Twitter" target="_blank">
            <svg><use xlink:href="#twitter"></svg>
          </a>
        </div>
        <p class="speaker__bio">
          Philip is a failed Ember.js developer. He scaled the learning curve only to fall further down, every plateau was greeted by another summit. From startup developer to independent consultant to unemployed, he has been plying his trade for six years with the goal of building things fast and well which drew him first to Rails and then Ember.
        </p>
        <p class="speaker__bio">
          He hails from the land where they film Game of Thrones (Northern Ireland), but has ended up in a flatter world (The Netherlands) so he can be close to an international airport that actually flies internationally. For things like Wicked Good Ember. He is comfortable flying into a headwind.
        </p>
        <div class="speaker__talk">
          <h3 class="speaker__talk__title">Elmber</h3>
          <p class="t-text">Can you out-Ember Ember? Productivity, developer ergonomics, eliminating trivial choices, friendly APIs, dramatically less code, better primitives, productive out of the box?</p>
          <p class="t-text">JavaScript is often accused as the source of Ember’s worst ills and thus conveniently side-steps responsibility for the challenges that every developer faces when picking up and using Ember. Indeed much of the Ember ecosystem is like a giant JavaScript workaround. What if someone wasn’t satisfied with that excuse?</p>
          <p class="t-text">Elm has a way to go, but it already offers a vision for a more stable and sustainable future. Learn how decades of programming language research combine with a philosophy much like Ember’s to offer a superlative developer experience.</p>
        </div>
      </li>

      <span class="anchor" id="kelly-senna"></span>
      <li class="speaker">
        <figure>
          <img class="speaker__image" src="2016/speakers/kelly-senna.jpg" alt="Kelly Senna">
          <figcaption class="speaker__info">
            <h3 class="t-subheading">Kelly Senna</h3>
            <span class="speaker__position">
              <a class="t-link t-blue" href="https://www.bignerdranch.com/" target="_blank">Big Nerd Ranch</a>
            </span>
          </figcaption>
        </figure>
        <div class="speaker__socials">
          <a class="speaker__social t-link" href="https://twitter.com/simplysenna" title="Visit Kelly Senna's Twitter" target="_blank">
            <svg><use xlink:href="#twitter"></svg>
          </a>
        </div>
        <p class="speaker__bio">
          Kelly is a web developer at Big Nerd Ranch, where she works on projects for clients ranging from startups to Fortune 500 companies. When not coding, you can usually find her tinkering on old bikes, gardening, or giving friends mohawks.
        </p>
        <div class="speaker__talk">
          <h3 class="speaker__talk__title">Memory Management &amp; the Search for Performance</h3>
          <p class="t-text">When building for the web, we want fast and efficient applications that move at the speed of light. Practical memory management can help get us there! Since JavaScript is garbage collected, many developers feel they don’t have to worry about memory management because it is done for us. But how does it actually work? Does it work how we think it does?</p>
          <p class="t-text">Using an Ember.js application, we will discuss memory management in JavaScript and what is going on behind your browser. Then let’s jump into debugging and take a look at some tools we can use to help pinpoint leaks and show us where we can improve performance.</p>
        </div>
      </li>

      <span class="anchor" id="chris-thoburn"></span>
      <li class="speaker">
        <figure>
          <img class="speaker__image" src="2016/speakers/chris-thoburn.jpg" alt="Chris Thoburn">
          <figcaption class="speaker__info">
            <h3 class="t-subheading">Chris Thoburn</h3>
            <span class="speaker__position">
              <a class="t-link t-blue" href="https://isleofcode.com/" target="_blank">IsleofCode</a>
            </span>
          </figcaption>
        </figure>
        <div class="speaker__socials">
          <a class="speaker__social t-link" href="https://twitter.com/runspired" title="Visit Chris Thoburn's Twitter" target="_blank">
            <svg><use xlink:href="#twitter"></svg>
          </a>
        </div>
        <p class="speaker__bio">
          Chris Thoburn is a Javascript Engineer at IsleofCode, author of many Ember.js addons for helping deliver maintainable and performant cross-platform applications, and maintainer of
          <a class="t-link" href="http://hammerjs.github.io/">Hammer.js</a>.
        </p>
        <p class="speaker__bio">
          In his free time he is a passionate runner and outdoor enthusiast. You should join him in camping at Wicked Good Ember.
        </p>
        <div class="speaker__talk">
          <h3 class="speaker__talk__title">Beyond 60fps</h3>
          <p class="t-text">The talk covers how the ways we currently schedule and perform work in applications are suboptimal. It takes a deep dive into how Javascript runtimes and browsers work, and how we can write code to make our app’s do their work more intelligently.</p>
          <p class="t-text">You’ll walk away with deeper knowledge and appreciation for things you didn’t even know your browser had: MicroTasks, MacroTasks, call stacks and requestAnimationFrame, as well as a preview of the kernel Ember is building for the web. This talk should be friendly and useful for beginner to experienced JS developers.</p>
        </div>
      </li>

      <span class="anchor" id="trent-willis"></span>
      <li class="speaker">
        <figure>
          <img class="speaker__image" src="2016/speakers/trent-willis.jpg" alt="Trent Willis">
          <figcaption class="speaker__info">
            <h3 class="t-subheading">Trent Willis</h3>
            <span class="speaker__position">
              <a class="t-link t-blue" href="http://www.linkedin.com/" target="_blank">LinkedIn</a>
            </span>
          </figcaption>
        </figure>
        <div class="speaker__socials">
          <a class="speaker__social t-link" href="https://twitter.com/trentmwillis" title="Visit Trent Willis' Twitter" target="_blank">
            <svg><use xlink:href="#twitter"></svg>
          </a>
        </div>
        <p class="speaker__bio">
          Trent is a software engineer at LinkedIn and a maintainer of
          <a class="t-link" href="http://qunitjs.com/">QUnit</a>. He loves solving difficult problems and listening to loud music, usually at the same time.
        </p>
        <div class="speaker__talk">
          <h3 class="speaker__talk__title">Maintaining Your Tests At Scale</h3>
          <p class="t-text">The only thing more fun than writing tests is maintaining tests! Right!? Even though it can be a drag, maintaining an effective test suite as your project grows is one key to being able to release successfully and iterate quickly. This talk will provide you with conceptual ideas and concrete examples on how to keep your test suite stable and efficient; it will help you scale your test suite from a couple dozen to several thousand or more.</p>
        </div>
      </li>
    </ul>
  </section>
</main>
